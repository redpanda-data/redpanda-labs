#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# This configuration enables Python applications to connect to the Iceberg catalog:
#
# 1. REST Catalog Connection:
#    - Uses Kubernetes service DNS for reliable cluster-internal communication
#    - iceberg-rest.iceberg-lab.svc.cluster.local resolves to REST catalog pods
#    - Port 8181 is the standard Iceberg REST API endpoint
#
# 2. S3 Storage Configuration:
#    - MinIO headless service provides direct access to storage nodes
#    - Credentials match the MinIO tenant configuration
#    - Required for PyIceberg to read/write table data files
#
# 3. Integration Points:
#    - Jupyter notebooks can use PyIceberg library for table operations
#    - Complements Spark SQL access with programmatic table management
#    - Enables advanced analytics workflows beyond basic SQL queries
#
# Usage: This file is automatically mounted into Spark containers for PyIceberg access
catalog:
    default:
        uri: http://iceberg-rest.iceberg-lab.svc.cluster.local:8181
        s3.endpoint: http://iceberg-minio-hl.iceberg-lab.svc.cluster.local:9000
        s3.access-key-id: minio
        s3.secret-access-key: minio123
